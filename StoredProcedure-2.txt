SQL> SET SERVEROUTPUT ON;
SQL> SET VERIFY OFF;

SQL> edit
Wrote file afiedt.buf

  1  DECLARE	
  2  TYPE course_table_type IS TABLE OF
  3  COURSE.DESCRIPTION%TYPE 
  4  INDEX BY BINARY_INTEGER;
  5  course_table course_table_type;
  6  v_count NUMBER(5) := 1;
  7  CURSOR c_course_cursor IS 
  8  Select DESCRIPTION from course 
  9  where PREREQUISITE IS NULL 
 10  ORDER BY DESCRIPTION;
 11  BEGIN
 12  	OPEN c_course_cursor;
 13  	LOOP
 14  	FETCH c_course_cursor INTO course_table(v_count);
 15  	EXIT WHEN c_course_cursor%NOTFOUND;
 16  	DBMS_OUTPUT.PUT_LINE('Course Description : ' || v_count || ':' || course_table(v_count));
 17  	v_count := v_count + 1;
 18  	END LOOP;
 19  	v_count := v_count - 1;
 20  	DBMS_OUTPUT.PUT_LINE('Total # of Courses' || ' without the Prerequisite is: ' || v_count);
 21  	DBMS_OUTPUT.PUT_LINE('***********************************************');
 22  	CLOSE c_course_cursor;
 23* END;
SQL> /
Course Description : 1:DP Overview                                              
Course Description : 2:Intro to Computers                                       
Course Description : 3:Java for C/C++ Programmers                               
Course Description : 4:Operating Systems                                        
Total # of Courses without the Prerequisite is: 4                               
***********************************************                                 

PL/SQL procedure successfully completed.

SQL> edit
Wrote file afiedt.buf

  1  DECLARE	
  2  TYPE course_table_type IS TABLE OF
  3  COURSE%ROWTYPE;
  4  course_table course_table_type := course_table_type();
  5  v_count NUMBER(5) := 1;
  6  CURSOR c_course_cursor IS 
  7  select DESCRIPTION from course 
  8  where PREREQUISITE IS NULL 
  9  ORDER BY DESCRIPTION;
 10  BEGIN
 11  	FOR i IN c_course_cursor
 12  	LOOP
 13  	course_table.EXTEND;
 14  	DBMS_OUTPUT.PUT_LINE('Course Description : ' || v_count || ': ' || i.description);
 15  	v_count := v_count + 1;
 16  	END LOOP;
 17  	v_count := v_count - 1;
 18  	DBMS_OUTPUT.PUT_LINE('Total # of Courses' || ' without the Prerequisite is: ' || v_count);
 19  	DBMS_OUTPUT.PUT_LINE('***********************************************');
 20* END;
SQL> /
Course Description : 1: DP Overview                                             
Course Description : 2: Intro to Computers                                      
Course Description : 3: Java for C/C++ Programmers                              
Course Description : 4: Operating Systems                                       
Total # of Courses without the Prerequisite is: 4                               
***********************************************                                 

PL/SQL procedure successfully completed.

SQL> edit
Wrote file afiedt.buf

  1  DECLARE
  2  type t_rec is RECORD
  3  ( 
  4  v_zip NUMBER,
  5  v_num_stud NUMBER
  6  );
  7  v_total NUMBER := 0;
  8  v_total_students NUMBER;
  9  t_course t_rec;
 10  CURSOR c_zip IS Select ZIP, COUNT(STUDENT_ID) 
 11  FROM (SELECT DISTINCT s.zip, s.student_id
 12               from Student s LEFT JOIN enrollment e
 13               ON s.student_id = e.student_id 
 14               WHERE s.zip LIKE '&zip' || '%')
 15  GROUP BY zip
 16  ORDER BY zip;
 17  BEGIN
 18  	SELECT COUNT(*) INTO v_total_students 	
 19  	FROM student where zip LIKE '&zip'|| '%';
 20  	IF(v_total_students > 0) THEN
 21  	OPEN c_zip;
 22  	LOOP
 23  	FETCH c_zip INTO t_course;
 24  	EXIT WHEN c_zip%NOTFOUND;
 25  	DBMS_OUTPUT.PUT_LINE('Zip code: ' || t_course.v_zip || ' has exactly ' || t_course.v_num_stud || ' students enrolled.');
 26  	v_total := v_total + 1;
 27  	END LOOP;
 28  	DBMS_OUTPUT.PUT_LINE('***************************************************');
 29  	DBMS_OUTPUT.PUT_LINE('Total # of zip codes under ' || '&zip' || ' is ' || v_total);
 30  	DBMS_OUTPUT.PUT_LINE('Total # of Students under zip code ' || '&zip' || ' is ' || v_total_students);
 31  	CLOSE c_zip;
 32  	ELSE
 33  	DBMS_OUTPUT.PUT_LINE('&zip'  ||  'This zip area is student empty. Please, try again');
 34  	END IF;
 35* END;
SQL> /
Enter value for zip: 073
Zip code: 7302 has exactly 1 students enrolled.                                 
Zip code: 7304 has exactly 2 students enrolled.                                 
Zip code: 7306 has exactly 4 students enrolled.                                 
Zip code: 7307 has exactly 3 students enrolled.                                 
***************************************************                             
Total # of zip codes under 073 is 4                                             
Total # of Students under zip code 073 is 10                                    

PL/SQL procedure successfully completed.

SQL> edit
Wrote file afiedt.buf

  1  DECLARE
  2  CURSOR c_zip IS Select ZIP, COUNT(STUDENT_ID) AS stud_total
  3  FROM (SELECT DISTINCT s.zip, s.student_id 
  4  from Student s LEFT JOIN enrollment e
  5  ON s.student_id = e.student_id 
  6  WHERE s.zip LIKE '&zip' || '%')
  7  GROUP BY zip
  8  ORDER BY zip;
  9  c_stud c_zip%ROWTYPE;
 10  TYPE zip_table_type IS TABLE OF
 11  c_stud%TYPE INDEX BY PLS_INTEGER;
 12  zip_table zip_table_type;
 13  v_total NUMBER := 0;
 14  v_total_students NUMBER;
 15  BEGIN
 16  	SELECT COUNT(*) INTO v_total_students FROM student where zip LIKE '&zip'|| '%';
 17  	IF(v_total_students > 0) THEN
 18  	FOR i in c_zip
 19  	LOOP
 20  	DBMS_OUTPUT.PUT_LINE('Zip code: ' || i.zip || ' has exactly ' || i.stud_total || ' students enrolled.');
 21  	v_total := v_total + 1;
 22  	END LOOP;
 23  	DBMS_OUTPUT.PUT_LINE('***************************************************');
 24  	DBMS_OUTPUT.PUT_LINE('Total # of zip codes under ' || '&zip' || ' is ' || v_total);
 25  	DBMS_OUTPUT.PUT_LINE('Total # of Students under zip code ' || '&zip' || ' is ' || v_total_students);
 26  	ELSE
 27  	DBMS_OUTPUT.PUT_LINE('&zip'  ||  ' This zip area is student empty. Please, try again');
 28  	END IF;
 29* END;
SQL> /
Enter value for zip: 073
Zip code: 07302 has exactly 1 students enrolled.                                
Zip code: 07304 has exactly 2 students enrolled.                                
Zip code: 07306 has exactly 4 students enrolled.                                
Zip code: 07307 has exactly 3 students enrolled.                                
***************************************************                             
Total # of zip codes under 073 is 4                                             
Total # of Students under zip code 073 is 10                                    

PL/SQL procedure successfully completed.

SQL> spool off;

